name: Kaniko Build

on:
  workflow_call:
    inputs:
      runner:
        description: |
          The name of the runner to use.
        required: true
        type: string
      registry_url:
        description: |
          The URL of the Docker registry where the image will be pushed.
        required: true
        type: string
      image_name:
        description: |
          The name of the Docker image to be built and pushed. This typically includes the repository name.
        required: false #Should be required
        type: string
      dockerfile:
        description: |
          The path to the Dockerfile used for building the Docker image.
        type: string
        default: "./Dockerfile"
      context:
        description: |
          The build context directory for the Docker image. This directory is used to provide files needed for the build.
        type: string
        default: "."
      cache:
        description: |
          Enables or disables caching for Docker builds. If enabled, Kaniko will use cache layers to speed up the build process.
        type: boolean
        default: true
      cache_registry:
        description: |
          The Docker registry used to store cache layers. If caching is enabled, this registry will be used to push and pull cache layers.
        type: string
        default: ${{ github.repository }}
      image_push:
        description: |
          Controls whether the image should be pushed to the registry. If set to false, the image will only be built and not pushed.
        type: boolean
        default: false
      tag:
        description: |
          The tag to be used for the Docker image.
        default: ""
        type: string

    secrets:
      registry_username:
        description: |
          The username for authentication with the Docker registry.
        required: true
      registry_password:
        description: |
          The password for authentication with the Docker registry.
        required: true

env:
  KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"
jobs:
  checkout:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Determine Image Tag
        id: determine_tag
        if: ${{ inputs.image_push == 'true' }}
        run: |
          # Use the input tag if provided; otherwise, extract version from GITHUB_REF
          if [ -n "${{ inputs.tag }}" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_ENV
          else
            version=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
            if [ -z "$version" ]; then
              echo "No version tag found. Using 'latest'."
              version=latest
            fi
            echo "tag=$version" >> $GITHUB_ENV
          fi

  build:
    needs: checkout
    runs-on: ${{ inputs.runner }}
    container:
      image: gcr.io/kaniko-project/executor:v1.20.0-debug
    permissions:
      contents: read

    steps:
      - name: Set up Docker config
        run: |
          # Create Docker config directory if it doesn't exist
          mkdir -p /kaniko/.docker

          # Write Docker config file with authentication details
          cat <<EOF > /kaniko/.docker/config.json
          {
            "auths": {
              "${{ inputs.registry_url }}": {
                "username": "${{ secrets.registry_username }}",
                "password": "${{ secrets.registry_password }}"
              }
            }
          }
          EOF

      - name: Build Image
        run: |
          /kaniko/executor --dockerfile="${{ inputs.dockerfile }}" \
            --context="${{ inputs.context }}"  \
            --destination="${{ inputs.registry_url }}/$${{inputs.image_name}}:$${{ env.tag }}" \
            ${{ env.KANIKO_CACHE_ARGS }}
